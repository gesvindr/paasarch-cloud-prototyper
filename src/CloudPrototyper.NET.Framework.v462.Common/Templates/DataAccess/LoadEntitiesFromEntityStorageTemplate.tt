<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="CloudPrototyper.NET.Framework.v462.Common.Generators.DataAccess.LoadEntitiesFromEntityStorageGenerator" name="Model" #>
using System.Collections.Generic;
// Operation loading entities from storage
namespace  <#= Model.Namespace #> 
{
    public class <#= Model.Name #> : <#= Model.OperationInterface.Namespace #>.<#= Model.OperationInterface.Name #>
    {	
		
		public const string Key = "<#= Model.ModelParameters.Name #>";

		public <#= Model.Storage.Namespace #>.<#= Model.Storage.Name #> Storage { get; set; }

		public <#= Model.Name #>(<#= Model.Storage.Namespace #>.<#= Model.Storage.Name #> storage)
		{
			Storage = storage;
		}

		public void Execute(List<string> output) 
		{
			var result = Storage.GetEntities(
			"<#= Model.ModelParameters.EntitySetName #>"
			,"<#= Model.ModelParameters.EntityName #>", 
			new <#= Model.Query.Namespace #>.<#= Model.Query.Name #>
			{
				PropertyName = "<#= Model.ModelParameters.Filter.OnAttribute #>",
				IsNominal = <#= Model.ModelParameters.Filter.IsNominal.ToString().ToLower() #>,
				NominalParameter = "<#= Model.ModelParameters.Filter.NominalValue #>",
				MaxValue  = "<#= Model.ModelParameters.Filter.MaxValue #>",
				MinValue  = "<#= Model.ModelParameters.Filter.MinValue #>"
			});
			foreach (var entity in result)
		    {
		        output.Add(entity.ToString()+"\n");
		    }
		}
    }
}

